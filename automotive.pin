#!/usr/bin/env pinpoint

[bottom]
[fill]
[font=Gill Sans 60px]

-- [yocto.jpg]

# Ross Burton, Userspace Architect for Yocto
# Open Source Technology Centre at Intel
# This session is a high level introduction to the Yocto Project

-- [cars2.jpg]

What is the Yocto Project?

# Appears to be confusion in the automotive community about the Yocto Project
# We were invited by LF to come here and clarify what Yocto is
# So, the Yocto Project is...

-- [umbrella.jpg]

Umbrella project

# You don't download or install the Yocto Project itself
# Just like you don't install the Apache Foundation

-- [tools.jpg]

Build environment
and development tools

# build system (bitbake), package metadata (oe-core), Eclipse plugin, SDK

-- [cpus.jpg] [text-align=center]

x86 • ARM
MIPS • PowerPC

# Core metadata builds for virtualised machines, various BSPs for specific
# platform support

-- [people.jpg]

Collaboration space

# providing a forum for diverse users to share problems and solutions


# PAUSE


-- [minifigs.jpg]

So many choices…

# When picking a platform 
# what's the difference between yocto and android, linaro, tizen, buildroot,
# or hacking your favourite desktop distribution...

-- [engineer.jpg]

…why pick the Yocto Project?

# linux for embedded, from a small ARM to mission critical xeon clusters
# custom distro to your needs
# tools to help do distribution building
# TODO

-- [cables.jpg]

Some are easy to hack on,
but you’ll regret that later

# debugging when you need to rebuild
# switching hardware or toolchain
# commercial support
# TODO

-- [road.jpg]

Designed for the long term

# generate archives for gpl compliance
# reproducable builds for the entire system

-- [tumble.jpg]

Won’t fall apart in time

# upgrades (hack fedora and ship, 1 year later need to ship an update... how?)
# GPL compliance (source *and* build instructions, more so for hack-a-distro)
# TODO

-- [group.jpg]

Who is in the Yocto Project?

-- [cpus.jpg]

Hardware manufacturers

# i.e. Intel, Texas Instruments, Freescale

-- [cat-computer.jpg]

Embedded OSVs

# i.e. Wind River, MontaVista, Enea Software, Mentor Graphics

-- [cat.jpg]

Consultants and individuals

# Consultants
# individuals "scratching an itch" for their own projects

- [xwing.jpg]

How does it work?

# Enough about what the Yocto Project can do
# How does it do it?

- [cake.jpg]

It’s all about the layers

# A YP build is assembled from a number of layers
# Layers are modular and you can combine layers from different sources

- [text-align=center] [blueprint.jpg]

Bitbake

# Build system

- [text-align=center] [blueprint.jpg] [transition=none]

oe-core
Bitbake

# core metadata
# toolchain, kernel, eglibc, Xorg, Wayland (soon), graphical toolkits

- [text-align=center] [blueprint.jpg] [transition=none]

meta-intel
oe-core
Bitbake

# Intel hardware BSP

- [text-align=center] [blueprint.jpg] [transition=none]

meta-yocto
meta-intel
oe-core
Bitbake

# Distribution policy
# (Poky in meta-yocto for historial reasons)

- [guacamayo.jpg]

Real World Example:
Guacamayo

# Real world example, Guacamayo.
# Disclosure: maintainer in my own time
# Media box software, set-top box, wireless speakers, etc

- [text-align=center] [guacamayo.jpg]

meta-guacamayo
meta-ti
meta-raspberrypi
meta-yocto-bsp
meta-yocto
oe-core
Bitbake

# Builds oe-core, Poky distro, Poky/RPi/TI BSPs, and extra packages

-

Use Case: dom0

-

Use Case: single purpose computer

# TODO better name

# Any of the numerous specalised embedded devices in a car
# Such as dashboard, engine management

-
